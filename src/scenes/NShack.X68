; generated by build tools

	;---------------------------------------------------------------------------
	; scene ID
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_NSHACK

	;---------------------------------------------------------------------------
	; tiles
	;---------------------------------------------------------------------------
	dc.w	$0007 ; tileset count - 1

	; tileset 0 - tiles start at [0] - tileset length [1]
	dc.l	TransparentTileTilesStart
	dc.l	TransparentTileTilesEnd

	; tileset 1 - tiles start at [1] - tileset length [4]
	dc.l	FloorNShackTilesStart
	dc.l	FloorNShackTilesEnd

	; tileset 2 - tiles start at [5] - tileset length [4D]
	dc.l	FrameTilesStart
	dc.l	FrameTilesEnd

	; tileset 3 - tiles start at [52] - tileset length [30]
	dc.l	CounterTilesStart
	dc.l	CounterTilesEnd

	; tileset 4 - tiles start at [82] - tileset length [C]
	dc.l	NShackDisplayTilesStart
	dc.l	NShackDisplayTilesEnd

	; tileset 5 - tiles start at [8E] - tileset length [4]
	dc.l	NShackBarrelHigh32x8TilesStart
	dc.l	NShackBarrelHigh32x8TilesEnd

	; tileset 6 - tiles start at [92] - tileset length [C]
	dc.l	NShackBarrelLow32x24TilesStart
	dc.l	NShackBarrelLow32x24TilesEnd

	; tileset 7 - tiles start at [9E] - tileset length [1]
	dc.l	BorderTileTilesStart
	dc.l	BorderTileTilesEnd

	;---------------------------------------------------------------------------
	; palettes
	;---------------------------------------------------------------------------
	dc.l	PaletteNShack00
	dc.l	PaletteNShack01
	dc.l	PaletteNShack02
	dc.l	PalettePeople

	;---------------------------------------------------------------------------
	; scenery
	;---------------------------------------------------------------------------
	dc.w	$0016 ; scenery count - 1

	; floor
	dc.l	Pattern16x16x304
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000001 ; vdp pattern
	dc.w	$000C ; repeat=12
	dc.l	VDP_VRAM_WRITE_B+$00020000+$00800000 ; initial drawing location

	; west wall
	dc.l	PatternFrameWestOpen
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$02800000 ; initial drawing location

	; east wall
	dc.l	PatternFrameEastClosed
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$004A0000+$02800000 ; initial drawing location

	; south wall
	dc.l	PatternFrameSouthClosed
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$0D000000 ; initial drawing location

	; north wall
	dc.l	PatternFrameNorthClosed
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$00020000+$00800000 ; initial drawing location

	; counter - high
	dc.l	PatternNShackCounterHigh
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000001010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$03000000 ; initial drawing location

	; counter - low
	dc.l	PatternNShackCounterLow
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$04000000 ; initial drawing location

	; display - left - high
	dc.l	PatternNShackDisplayHigh
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000010000010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00060000+$03800000 ; initial drawing location

	; display - left - low
	dc.l	PatternNShackDisplayLow
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010000010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00060000+$04000000 ; initial drawing location

	; display - right - high
	dc.l	PatternNShackDisplayHigh
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000010000010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00320000+$03800000 ; initial drawing location

	; display - right - low
	dc.l	PatternNShackDisplayLow
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010000010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00320000+$04000000 ; initial drawing location

	; barrel - high - 0
	dc.l	Pattern32x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010001110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00120000+$08000000 ; initial drawing location

	; barrel - low - 0
	dc.l	Pattern32x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00120000+$08800000 ; initial drawing location

	; barrel - high - 1
	dc.l	Pattern32x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010001110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$08000000 ; initial drawing location

	; barrel - low - 1
	dc.l	Pattern32x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$08800000 ; initial drawing location

	; barrel - high - 2
	dc.l	Pattern32x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010001110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00280000+$08000000 ; initial drawing location

	; barrel - low - 2
	dc.l	Pattern32x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00280000+$08800000 ; initial drawing location

	; barrel - high - 3
	dc.l	Pattern32x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010001110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00340000+$08000000 ; initial drawing location

	; barrel - low - 3
	dc.l	Pattern32x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00340000+$08800000 ; initial drawing location

	; north border
	dc.l	Pattern8x8x320
	;		%pccvhnnnnnnnnnnn
	dc.w	%1110000010011110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$00000000 ; initial drawing location

	; south border
	dc.l	Pattern8x8x320
	;		%pccvhnnnnnnnnnnn
	dc.w	%1110000010011110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$0D800000 ; initial drawing location

	; west border
	dc.l	Pattern8x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%1110000010011110 ; vdp pattern
	dc.w	$001A ; repeat=26
	dc.l	VDP_VRAM_WRITE_A+$00000000+$00000000 ; initial drawing location

	; east border
	dc.l	Pattern8x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%1110000010011110 ; vdp pattern
	dc.w	$001A ; repeat=26
	dc.l	VDP_VRAM_WRITE_A+$004E0000+$00000000 ; initial drawing location

	;---------------------------------------------------------------------------
	; text
	;---------------------------------------------------------------------------
	dc.w	$FFFF ; no text

	;---------------------------------------------------------------------------
	; objects
	;---------------------------------------------------------------------------
	dc.w	OBJ_LIST_LENGTH-1 ; object count

	;---------------------------------------------------------------------------
	; word0=Object ID (0-65535)
	; word1[0-8]=x0 (0-511)
	; word1[9-15]=width (0-127)
	; word2[0-8]=y0 (0-512)
	; word2[9-15]=height (0-127)
	;---------------------------------------------------------------------------

	dc.w	OBJ_SCENE_NSHACK_CASE
	;		%wwwwwwwxxxxxxxxx
	dc.w	%1110000010001000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100100010101100

	dc.w	OBJ_SCENE_NSHACK_CASE
	;		%wwwwwwwxxxxxxxxx
	dc.w	%1110000101001010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100100010101100

	dc.w	OBJ_SCENE_NSHACK_BARREL
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011000011001000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011000100000100

	dc.w	OBJ_SCENE_NSHACK_BARREL
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011000011111000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011000100000100

	dc.w	OBJ_SCENE_NSHACK_BARREL
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011000100100000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011000100000100

	dc.w	OBJ_SCENE_NSHACK_BARREL
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011000101010010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011000100000100

	dc.w	OBJ_NPC_JEN
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011000100010100
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100100010101100

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	;---------------------------------------------------------------------------
	; collision data
	;---------------------------------------------------------------------------
	dc.l	NShackCollisionStart ; location of collision data

	;---------------------------------------------------------------------------
	; exits: 0=south,1=north,2=west,3=east
	;---------------------------------------------------------------------------
	dc.w	$FFFF
	dc.w	$FFFF
	dc.w	SCENE_ID_SHALL
	dc.w	$FFFF

	;---------------------------------------------------------------------------
	; npc locations
	;---------------------------------------------------------------------------
	dc.w	$0003 ; npc count - 1

	dc.w	$0118 ; starting x location of npc0
	dc.w	$00A0 ; starting y location of npc0
	dc.w	DIRECTION_DOWN ; starting direction of npc0
	dc.w	$FFFF ; movement frequency of npc0
	dc.l	NullMovementStart ; location of movement pattern for npc0
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$00DC ; starting x location of npc1
	dc.w	$00C8 ; starting y location of npc1
	dc.w	DIRECTION_RIGHT ; starting direction of npc1
	dc.w	$FFFF ; movement frequency of npc1
	dc.l	NullMovementStart ; location of movement pattern for npc1
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0140 ; starting x location of npc2
	dc.w	$00C8 ; starting y location of npc2
	dc.w	DIRECTION_LEFT ; starting direction of npc2
	dc.w	$FFFF ; movement frequency of npc2
	dc.l	NullMovementStart ; location of movement pattern for npc2
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0168 ; starting x location of npc3
	dc.w	$00A0 ; starting y location of npc3
	dc.w	DIRECTION_LEFT ; starting direction of npc3
	dc.w	$FFFF ; movement frequency of npc3
	dc.l	NullMovementStart ; location of movement pattern for npc3
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	;---------------------------------------------------------------------------
	; bgm
	;---------------------------------------------------------------------------
	dc.l	BGM_Mall ; location of background music
