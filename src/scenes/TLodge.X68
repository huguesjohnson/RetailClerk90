; generated by build tools

	;---------------------------------------------------------------------------
	; scene ID
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_TLODGE

	;---------------------------------------------------------------------------
	; tiles
	;---------------------------------------------------------------------------
	dc.w	$000B ; tileset count - 1

	; tileset 0 - tiles start at [0] - tileset length [1]
	dc.l	TransparentTileTilesStart
	dc.l	TransparentTileTilesEnd

	; tileset 1 - tiles start at [1] - tileset length [4]
	dc.l	FloorTileBasicTilesStart
	dc.l	FloorTileBasicTilesEnd

	; tileset 2 - tiles start at [5] - tileset length [14]
	dc.l	FrameRectTilesStart
	dc.l	FrameRectTilesEnd

	; tileset 3 - tiles start at [19] - tileset length [B]
	dc.l	CounterTopTilesStart
	dc.l	CounterTopTilesEnd

	; tileset 4 - tiles start at [24] - tileset length [37]
	dc.l	TLodgeLargeRackLeftTilesStart
	dc.l	TLodgeLargeRackLeftTilesEnd

	; tileset 5 - tiles start at [5B] - tileset length [3C]
	dc.l	TLodgeLargeRackRightTilesStart
	dc.l	TLodgeLargeRackRightTilesEnd

	; tileset 6 - tiles start at [97] - tileset length [19]
	dc.l	TLodgeSmallRackLeftHighTilesStart
	dc.l	TLodgeSmallRackLeftHighTilesEnd

	; tileset 7 - tiles start at [B0] - tileset length [F]
	dc.l	TLodgeSmallRackLeftLowTilesStart
	dc.l	TLodgeSmallRackLeftLowTilesEnd

	; tileset 8 - tiles start at [BF] - tileset length [8]
	dc.l	TLodgeSmallRackCenterHighTilesStart
	dc.l	TLodgeSmallRackCenterHighTilesEnd

	; tileset 9 - tiles start at [C7] - tileset length [A]
	dc.l	TLodgeSmallRackCenterLowTilesStart
	dc.l	TLodgeSmallRackCenterLowTilesEnd

	; tileset A - tiles start at [D1] - tileset length [A]
	dc.l	TLodgeSmallRackRightHighTilesStart
	dc.l	TLodgeSmallRackRightHighTilesEnd

	; tileset B - tiles start at [DB] - tileset length [A]
	dc.l	TLodgeSmallRackRightLowTilesStart
	dc.l	TLodgeSmallRackRightLowTilesEnd

	;---------------------------------------------------------------------------
	; palettes
	;---------------------------------------------------------------------------
	dc.l	PaletteTLodge00
	dc.l	PaletteTLodge01
	dc.l	PaletteTLodge02
	dc.l	PalettePeople

	;---------------------------------------------------------------------------
	; scenery
	;---------------------------------------------------------------------------
	dc.w	$000E ; scenery count - 1

	; background
	dc.l	PatternTileFloor
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000001 ; vdp pattern
	dc.w	$000D ; repeat=13
	dc.l	VDP_VRAM_WRITE_B+$00000000+$00000000 ; initial drawing location

	; left wall
	dc.l	PatternFrameSideClosedLeft
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$00800000 ; initial drawing location

	; right side
	dc.l	PatternFrameSideClosedRight
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$004E0000+$00800000 ; initial drawing location

	; counter
	dc.l	PatternCounterLow24x136
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000000011001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$000A0000+$05000000 ; initial drawing location

	; south wall
	dc.l	PatternFrameBottom
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$0D800000 ; initial drawing location

	; north wall - left side
	dc.l	PatternFrameTopOpenLeft
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$00000000 ; initial drawing location

	; north wall - right side
	dc.l	PatternFrameTopOpenRight
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$00360000 ; initial drawing location

	; large rack - left
	dc.l	PatternTLodgeLargeRackLeft
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000000100100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$00800000 ; initial drawing location

	; large rack - right
	dc.l	PatternTLodgeLargeRackRight
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001011011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$00800000 ; initial drawing location

	; small rack - left - high
	dc.l	PatternTLodgeSmallRackLeftHigh
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000010010111 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00180000+$05000000 ; initial drawing location

	; small rack - left - low
	dc.l	PatternTLodgeSmallRackLeftLow
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000010110000 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00180000+$07800000 ; initial drawing location

	; small rack - center - high
	dc.l	PatternTLodgeSmallRackCenterHigh
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010111111 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$002A0000+$05000000 ; initial drawing location

	; small rack - center - low
	dc.l	PatternTLodgeSmallRackCenterLow
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000011000111 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$002A0000+$07800000 ; initial drawing location

	; small rack - right - high
	dc.l	PatternTLodgeSmallRackRightHigh
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000011010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$05000000 ; initial drawing location

	; small rack - right - low
	dc.l	PatternTLodgeSmallRackRightLow
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000011011011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$07800000 ; initial drawing location

	;---------------------------------------------------------------------------
	; text
	;---------------------------------------------------------------------------
	dc.w	$FFFF ; no text

	;---------------------------------------------------------------------------
	; objects
	;---------------------------------------------------------------------------
	dc.w	OBJ_LIST_LENGTH-1 ; object count

	;---------------------------------------------------------------------------
	; word0=Object ID (0-65535)
	; word1[0-8]=x0 (0-511)
	; word1[9-15]=width (0-127)
	; word2[0-8]=y0 (0-512)
	; word2[9-15]=height (0-127)
	;---------------------------------------------------------------------------

	dc.w	OBJ_SCENE_TLODGE_DISKS
	;		%wwwwwwwxxxxxxxxx
	dc.w	%1011100010001000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100000010001000

	dc.w	OBJ_SCENE_TLODGE_RADIOS
	;		%wwwwwwwxxxxxxxxx
	dc.w	%1100000101010010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100000010001000

	dc.w	OBJ_SCENE_TLODGE_TVS
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0100111011100000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100010011100110

	dc.w	OBJ_SCENE_TLODGE_CLOCKS
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0100111100101000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100010011100110

	dc.w	OBJ_SCENE_TLODGE_VHS
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0100111101110000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100010011100110

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	;---------------------------------------------------------------------------
	; collision data
	;---------------------------------------------------------------------------
	dc.l	TLodgeCollisionStart ; location of collision data

	;---------------------------------------------------------------------------
	; exits: 0=south,1=north,2=west,3=east
	;---------------------------------------------------------------------------
	dc.w	$FFFF
	dc.w	SCENE_ID_EEHALL
	dc.w	$FFFF
	dc.w	$FFFF

	;---------------------------------------------------------------------------
	; npc locations
	;---------------------------------------------------------------------------
	dc.w	$0003 ; npc count - 1

	dc.w	$008C ; starting x location of npc0
	dc.w	$00F0 ; starting y location of npc0
	dc.w	DIRECTION_RIGHT ; starting direction of npc0
	dc.w	$FFFF ; movement frequency of npc0
	dc.l	NullMovementStart ; location of movement pattern for npc0
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc1
	dc.w	$0000 ; starting y location of npc1
	dc.w	DIRECTION_DOWN ; starting direction of npc1
	dc.w	$FFFF ; movement frequency of npc1
	dc.l	NullMovementStart ; location of movement pattern for npc1
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc2
	dc.w	$0000 ; starting y location of npc2
	dc.w	DIRECTION_DOWN ; starting direction of npc2
	dc.w	$FFFF ; movement frequency of npc2
	dc.l	NullMovementStart ; location of movement pattern for npc2
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc3
	dc.w	$0000 ; starting y location of npc3
	dc.w	DIRECTION_DOWN ; starting direction of npc3
	dc.w	$FFFF ; movement frequency of npc3
	dc.l	NullMovementStart ; location of movement pattern for npc3
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	;---------------------------------------------------------------------------
	; bgm
	;---------------------------------------------------------------------------
	dc.l	BGM_Mall ; location of background music
