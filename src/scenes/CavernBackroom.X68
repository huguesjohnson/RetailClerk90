; generated by build tools

	;---------------------------------------------------------------------------
	; scene ID
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_CAVERN_BACKROOM

	;---------------------------------------------------------------------------
	; tiles
	;---------------------------------------------------------------------------
	dc.w	$000D ; tileset count - 1

	; tileset 0 - tiles start at [0] - tileset length [1]
	dc.l	TransparentTileTilesStart
	dc.l	TransparentTileTilesEnd

	; tileset 1 - tiles start at [1] - tileset length [10]
	dc.l	FloorCarpetBlacklightTilesStart
	dc.l	FloorCarpetBlacklightTilesEnd

	; tileset 2 - tiles start at [11] - tileset length [14]
	dc.l	FrameRectTilesStart
	dc.l	FrameRectTilesEnd

	; tileset 3 - tiles start at [25] - tileset length [F]
	dc.l	GlassTilesStart
	dc.l	GlassTilesEnd

	; tileset 4 - tiles start at [34] - tileset length [1]
	dc.l	TransparentTileTilesStart
	dc.l	TransparentTileTilesEnd

	; tileset 5 - tiles start at [35] - tileset length [1C]
	dc.l	CavernSignTilesStart
	dc.l	CavernSignTilesEnd

	; tileset 6 - tiles start at [51] - tileset length [9]
	dc.l	CavernBackroomDeadArcadeBase00TilesStart
	dc.l	CavernBackroomDeadArcadeBase00TilesEnd

	; tileset 7 - tiles start at [5A] - tileset length [9]
	dc.l	CavernBackroomDeadArcadeBase01TilesStart
	dc.l	CavernBackroomDeadArcadeBase01TilesEnd

	; tileset 8 - tiles start at [63] - tileset length [9]
	dc.l	CavernBackroomDeadArcadeBase02TilesStart
	dc.l	CavernBackroomDeadArcadeBase02TilesEnd

	; tileset 9 - tiles start at [6C] - tileset length [9]
	dc.l	CavernBackroomDeadArcadeTop00TilesStart
	dc.l	CavernBackroomDeadArcadeTop00TilesEnd

	; tileset A - tiles start at [75] - tileset length [9]
	dc.l	CavernBackroomDeadArcadeTop01TilesStart
	dc.l	CavernBackroomDeadArcadeTop01TilesEnd

	; tileset B - tiles start at [7E] - tileset length [9]
	dc.l	CavernBackroomDeadArcadeTop02TilesStart
	dc.l	CavernBackroomDeadArcadeTop02TilesEnd

	; tileset C - tiles start at [87] - tileset length [9]
	dc.l	LadderTopTilesStart
	dc.l	LadderTopTilesEnd

	; tileset D - tiles start at [90] - tileset length [19]
	dc.l	LadderTopFrameTilesStart
	dc.l	LadderTopFrameTilesEnd

	;---------------------------------------------------------------------------
	; palettes
	;---------------------------------------------------------------------------
	dc.l	PaletteCavernBackroom00
	dc.l	PaletteCavernBackroom01
	dc.l	PaletteCavernBackroom02
	dc.l	PalettePeople

	;---------------------------------------------------------------------------
	; scenery
	;---------------------------------------------------------------------------
	dc.w	$001F ; scenery count - 1

	; floor
	dc.l	Pattern32x32Tile
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000001 ; vdp pattern
	dc.w	$0006 ; repeat=6
	dc.l	VDP_VRAM_WRITE_B+$00000000+$00000000 ; initial drawing location

	; north wall
	dc.l	PatternFrameTop
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$00000000 ; initial drawing location

	; right wall
	dc.l	PatternFrameSideClosedRight
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$004E0000+$00800000 ; initial drawing location

	; left wall
	dc.l	PatternFrameSideClosedLeft
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$00000000+$00800000 ; initial drawing location

	; south wall - left side
	dc.l	PatternFrameBottomOpenLeft
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$0D800000 ; initial drawing location

	; south wall - right side
	dc.l	PatternFrameBottomOpenRight
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$0D800000 ; initial drawing location

	; ladder frame
	dc.l	Pattern40x40
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000010010000 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$00440000+$00800000 ; initial drawing location

	; ladder
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010000111 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00460000+$01000000 ; initial drawing location

	; pattern 0 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$01800000 ; initial drawing location

	; pattern 0 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001110010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$02800000 ; initial drawing location

	; pattern 0 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$03000000 ; initial drawing location

	; pattern 0 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00460000+$03800000 ; initial drawing location

	; pattern 0 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001110010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00460000+$04800000 ; initial drawing location

	; pattern 0 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00460000+$05000000 ; initial drawing location

	; pattern 1 - palette 1 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00380000+$04800000 ; initial drawing location

	; pattern 1 - palette 1 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001111011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00380000+$05800000 ; initial drawing location

	; pattern 1 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00380000+$06000000 ; initial drawing location

	; pattern 1 - palette 1 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00040000+$09800000 ; initial drawing location

	; pattern 1 - palette 1 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001111011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00040000+$0A800000 ; initial drawing location

	; pattern 1 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00040000+$0B000000 ; initial drawing location

	; pattern 2 - palette 2 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$04000000 ; initial drawing location

	; pattern 2 - palette 2 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010000100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$05000000 ; initial drawing location

	; pattern 2 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$05800000 ; initial drawing location

	; pattern 2 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$002A0000+$01000000 ; initial drawing location

	; pattern 2 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000010000100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$002A0000+$02000000 ; initial drawing location

	; pattern 2 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$002A0000+$02800000 ; initial drawing location

	; pattern 2 - palette 2 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$07800000 ; initial drawing location

	; pattern 2 - palette 2 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010000100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$08800000 ; initial drawing location

	; pattern 2 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$09000000 ; initial drawing location

	; pattern 1 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$01800000 ; initial drawing location

	; pattern 1 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001111011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$02800000 ; initial drawing location

	; pattern 1 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001E0000+$03000000 ; initial drawing location

	;---------------------------------------------------------------------------
	; text
	;---------------------------------------------------------------------------
	dc.w	$FFFF ; no text

	;---------------------------------------------------------------------------
	; objects
	;---------------------------------------------------------------------------
	dc.w	OBJ_LIST_LENGTH-1 ; object count

	;---------------------------------------------------------------------------
	; word0=Object ID (0-65535)
	; word1[0-8]=x0 (0-511)
	; word1[9-15]=width (0-127)
	; word2[0-8]=y0 (0-512)
	; word2[9-15]=height (0-127)
	;---------------------------------------------------------------------------

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010010001101
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111100100001

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010010011101
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111010100001

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010011001101
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111011001001

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010011110101
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111010100010

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010100101000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111010011001

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010101100000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111011010001

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010110001000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111100000001

	dc.w	OBJ_SCENE_DEAD_ARCADE_GAME
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0011010110011000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011111011000001

	dc.w	OBJ_SCENE_CAVERN_BACKROOM_LADDER
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0100100110010110
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011000010001000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	;---------------------------------------------------------------------------
	; collision data
	;---------------------------------------------------------------------------
	dc.l	CavernBackroomCollisionStart ; location of collision data

	;---------------------------------------------------------------------------
	; exits: 0=south,1=north,2=west,3=east
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_CAVERN
	dc.w	$FFFF
	dc.w	$FFFF
	dc.w	$FFFF

	;---------------------------------------------------------------------------
	; npc locations
	;---------------------------------------------------------------------------
	dc.w	$0003 ; npc count - 1

	dc.w	$00CC ; starting x location of npc0
	dc.w	$00F0 ; starting y location of npc0
	dc.w	DIRECTION_DOWN ; starting direction of npc0
	dc.w	$FFFF ; movement frequency of npc0
	dc.l	NullMovementStart ; location of movement pattern for npc0
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc1
	dc.w	$0000 ; starting y location of npc1
	dc.w	DIRECTION_DOWN ; starting direction of npc1
	dc.w	$FFFF ; movement frequency of npc1
	dc.l	NullMovementStart ; location of movement pattern for npc1
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc2
	dc.w	$0000 ; starting y location of npc2
	dc.w	DIRECTION_DOWN ; starting direction of npc2
	dc.w	$FFFF ; movement frequency of npc2
	dc.l	NullMovementStart ; location of movement pattern for npc2
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc3
	dc.w	$0000 ; starting y location of npc3
	dc.w	DIRECTION_DOWN ; starting direction of npc3
	dc.w	$FFFF ; movement frequency of npc3
	dc.l	NullMovementStart ; location of movement pattern for npc3
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	;---------------------------------------------------------------------------
	; bgm
	;---------------------------------------------------------------------------
	dc.l	BGM_Mall ; location of background music
