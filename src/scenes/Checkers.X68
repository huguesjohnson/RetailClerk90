; generated by build tools

	;---------------------------------------------------------------------------
	; scene ID
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_CHECKERS

	;---------------------------------------------------------------------------
	; tiles
	;---------------------------------------------------------------------------
	dc.w	$000B ; tileset count - 1

	; tileset 0 - tiles start at [0] - tileset length [1]
	dc.l	TransparentTileTilesStart
	dc.l	TransparentTileTilesEnd

	; tileset 1 - tiles start at [1] - tileset length [4]
	dc.l	FloorCheckersTilesStart
	dc.l	FloorCheckersTilesEnd

	; tileset 2 - tiles start at [5] - tileset length [4D]
	dc.l	FrameTilesStart
	dc.l	FrameTilesEnd

	; tileset 3 - tiles start at [52] - tileset length [30]
	dc.l	CounterTilesStart
	dc.l	CounterTilesEnd

	; tileset 4 - tiles start at [82] - tileset length [8]
	dc.l	CheckersMirror16x32TilesStart
	dc.l	CheckersMirror16x32TilesEnd

	; tileset 5 - tiles start at [8A] - tileset length [C]
	dc.l	CheckersRack32x24TilesStart
	dc.l	CheckersRack32x24TilesEnd

	; tileset 6 - tiles start at [96] - tileset length [4]
	dc.l	CheckersMannequin1High16x16TilesStart
	dc.l	CheckersMannequin1High16x16TilesEnd

	; tileset 7 - tiles start at [9A] - tileset length [6]
	dc.l	CheckersMannequin1Low16x24TilesStart
	dc.l	CheckersMannequin1Low16x24TilesEnd

	; tileset 8 - tiles start at [A0] - tileset length [4]
	dc.l	CheckersMannequin2High16x16TilesStart
	dc.l	CheckersMannequin2High16x16TilesEnd

	; tileset 9 - tiles start at [A4] - tileset length [6]
	dc.l	CheckersMannequin2Low16x24TilesStart
	dc.l	CheckersMannequin2Low16x24TilesEnd

	; tileset A - tiles start at [AA] - tileset length [4]
	dc.l	CheckersMannequin3High16x16TilesStart
	dc.l	CheckersMannequin3High16x16TilesEnd

	; tileset B - tiles start at [AE] - tileset length [6]
	dc.l	CheckersMannequin3Low16x24TilesStart
	dc.l	CheckersMannequin3Low16x24TilesEnd

	;---------------------------------------------------------------------------
	; palettes
	;---------------------------------------------------------------------------
	dc.l	PaletteCheckers00
	dc.l	PaletteCheckers01
	dc.l	PaletteCheckers02
	dc.l	PalettePeople

	;---------------------------------------------------------------------------
	; scenery
	;---------------------------------------------------------------------------
	dc.w	$0016 ; scenery count - 1

	; floor
	dc.l	Pattern16x16x304
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000001 ; vdp pattern
	dc.w	$000C ; repeat=12
	dc.l	VDP_VRAM_WRITE_B+$00020000+$00800000 ; initial drawing location

	; west wall
	dc.l	PatternFrameWestClosed
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$02800000 ; initial drawing location

	; east wall
	dc.l	PatternFrameEastClosed
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$004A0000+$02800000 ; initial drawing location

	; south wall
	dc.l	PatternFrameSouthOpen
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$0D000000 ; initial drawing location

	; north wall
	dc.l	PatternFrameNorthClosed
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$00020000+$00800000 ; initial drawing location

	; counter
	dc.l	PatternCheckersCounterHigh
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001A0000+$03000000 ; initial drawing location

	; counter
	dc.l	PatternCheckersCounterLow
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001010010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001A0000+$03800000 ; initial drawing location

	; mirror - left side
	dc.l	Pattern16x32
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000010000010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$00100000+$00800000 ; initial drawing location

	; rack - left side
	dc.l	Pattern32x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010001010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00060000+$01000000 ; initial drawing location

	; rack - right side
	dc.l	Pattern32x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010001010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$01000000 ; initial drawing location

	; rack - right side
	dc.l	Pattern32x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010001010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00400000+$01000000 ; initial drawing location

	; mannequin 3 - palette 1 - high
	dc.l	Pattern16x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010101010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$000A0000+$07800000 ; initial drawing location

	; mannequin 3 - palette 1 - low
	dc.l	Pattern16x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010101110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$000A0000+$08800000 ; initial drawing location

	; mannequin 2 - palette 1 - high
	dc.l	Pattern16x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010100000 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00100000+$06800000 ; initial drawing location

	; mannequin 2 - palette 1 - low
	dc.l	Pattern16x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010100100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00100000+$07800000 ; initial drawing location

	; mannequin 1 - palette 1 - high
	dc.l	Pattern16x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000010010110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00160000+$07800000 ; initial drawing location

	; mannequin 1 - palette 1 - low
	dc.l	Pattern16x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00160000+$08800000 ; initial drawing location

	; mannequin 1 - palette 2 - high
	dc.l	Pattern16x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000010010110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$06800000 ; initial drawing location

	; mannequin 1 - palette 1 - low
	dc.l	Pattern16x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$07800000 ; initial drawing location

	; mannequin 2 - palette 2 - high
	dc.l	Pattern16x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000010100000 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$07000000 ; initial drawing location

	; mannequin 2 - palette 1 - low
	dc.l	Pattern16x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010100100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$08000000 ; initial drawing location

	; mannequin 3 - palette 2 - high
	dc.l	Pattern16x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000010101010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$07800000 ; initial drawing location

	; mannequin 3 - palette 1 - low
	dc.l	Pattern16x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010101110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$08800000 ; initial drawing location

	;---------------------------------------------------------------------------
	; text
	;---------------------------------------------------------------------------
	dc.w	$FFFF ; no text

	;---------------------------------------------------------------------------
	; objects
	;---------------------------------------------------------------------------
	dc.w	OBJ_LIST_LENGTH-1 ; object count

	;---------------------------------------------------------------------------
	; word0=Object ID (0-65535)
	; word1[0-8]=x0 (0-511)
	; word1[9-15]=width (0-127)
	; word2[0-8]=y0 (0-512)
	; word2[9-15]=height (0-127)
	;---------------------------------------------------------------------------

	dc.w	OBJ_SCENE_MANNEQUIN
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0010000010101010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0011000100000010

	dc.w	OBJ_SCENE_MANNEQUIN
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0010000011000010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100000011111000

	dc.w	OBJ_SCENE_MANNEQUIN
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0010000011011010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000100000010

	dc.w	OBJ_SCENE_MANNEQUIN
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000111101011010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000011110110

	dc.w	OBJ_SCENE_MANNEQUIN
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0010110101110010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0100000011111110

	dc.w	OBJ_SCENE_MANNEQUIN
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0010000110001010
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000100000100

	dc.w	OBJ_SCENE_CHECKERS_CLOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0100001010011000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0010000010010000

	dc.w	OBJ_SCENE_CHECKERS_CLOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0100001101011000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0010000010010000

	dc.w	OBJ_SCENE_CHECKERS_CLOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0100001101111110
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0010000010010000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	;---------------------------------------------------------------------------
	; collision data
	;---------------------------------------------------------------------------
	dc.l	CheckersCollisionStart ; location of collision data

	;---------------------------------------------------------------------------
	; exits: 0=south,1=north,2=west,3=east
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_EWHALL
	dc.w	$FFFF
	dc.w	$FFFF
	dc.w	$FFFF

	;---------------------------------------------------------------------------
	; npc locations
	;---------------------------------------------------------------------------
	dc.w	$0003 ; npc count - 1

	dc.w	$013C ; starting x location of npc0
	dc.w	$00C6 ; starting y location of npc0
	dc.w	DIRECTION_DOWN ; starting direction of npc0
	dc.w	$FFFF ; movement frequency of npc0
	dc.l	NullMovementStart ; location of movement pattern for npc0
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc1
	dc.w	$0000 ; starting y location of npc1
	dc.w	DIRECTION_DOWN ; starting direction of npc1
	dc.w	$FFFF ; movement frequency of npc1
	dc.l	NullMovementStart ; location of movement pattern for npc1
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc2
	dc.w	$0000 ; starting y location of npc2
	dc.w	DIRECTION_DOWN ; starting direction of npc2
	dc.w	$FFFF ; movement frequency of npc2
	dc.l	NullMovementStart ; location of movement pattern for npc2
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc3
	dc.w	$0000 ; starting y location of npc3
	dc.w	DIRECTION_DOWN ; starting direction of npc3
	dc.w	$FFFF ; movement frequency of npc3
	dc.l	NullMovementStart ; location of movement pattern for npc3
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	;---------------------------------------------------------------------------
	; bgm
	;---------------------------------------------------------------------------
	dc.l	BGM_Mall ; location of background music
