; generated by build tools

	;---------------------------------------------------------------------------
	; scene ID
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_CAVERN

	;---------------------------------------------------------------------------
	; tiles
	;---------------------------------------------------------------------------
	dc.w	$000B ; tileset count - 1

	; tileset 0 - tiles start at [0] - tileset length [1]
	dc.l	TransparentTileTilesStart
	dc.l	TransparentTileTilesEnd

	; tileset 1 - tiles start at [1] - tileset length [10]
	dc.l	FloorCarpetBlacklightTilesStart
	dc.l	FloorCarpetBlacklightTilesEnd

	; tileset 2 - tiles start at [11] - tileset length [14]
	dc.l	FrameRectTilesStart
	dc.l	FrameRectTilesEnd

	; tileset 3 - tiles start at [25] - tileset length [F]
	dc.l	GlassTilesStart
	dc.l	GlassTilesEnd

	; tileset 4 - tiles start at [34] - tileset length [1]
	dc.l	TransparentTileTilesStart
	dc.l	TransparentTileTilesEnd

	; tileset 5 - tiles start at [35] - tileset length [1C]
	dc.l	CavernSignTilesStart
	dc.l	CavernSignTilesEnd

	; tileset 6 - tiles start at [51] - tileset length [9]
	dc.l	CavernArcadeBase00TilesStart
	dc.l	CavernArcadeBase00TilesEnd

	; tileset 7 - tiles start at [5A] - tileset length [9]
	dc.l	CavernArcadeBase01TilesStart
	dc.l	CavernArcadeBase01TilesEnd

	; tileset 8 - tiles start at [63] - tileset length [9]
	dc.l	CavernArcadeBase02TilesStart
	dc.l	CavernArcadeBase02TilesEnd

	; tileset 9 - tiles start at [6C] - tileset length [9]
	dc.l	CavernArcadeTop00TilesStart
	dc.l	CavernArcadeTop00TilesEnd

	; tileset A - tiles start at [75] - tileset length [9]
	dc.l	CavernArcadeTop01TilesStart
	dc.l	CavernArcadeTop01TilesEnd

	; tileset B - tiles start at [7E] - tileset length [9]
	dc.l	CavernArcadeTop02TilesStart
	dc.l	CavernArcadeTop02TilesEnd

	;---------------------------------------------------------------------------
	; palettes
	;---------------------------------------------------------------------------
	dc.l	PaletteCavern00
	dc.l	PaletteCavern01
	dc.l	PaletteCavern02
	dc.l	PalettePeople

	;---------------------------------------------------------------------------
	; scenery
	;---------------------------------------------------------------------------
	dc.w	$0034 ; scenery count - 1

	; floor
	dc.l	Pattern32x32Tile
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000000001 ; vdp pattern
	dc.w	$0006 ; repeat=6
	dc.l	VDP_VRAM_WRITE_B+$00000000+$00000000 ; initial drawing location

	; north wall - left side
	dc.l	PatternFrameTopOpenLeft
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$00000000 ; initial drawing location

	; north wall - right side
	dc.l	PatternFrameTopOpenRight
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$00000000 ; initial drawing location

	; right wall
	dc.l	PatternFrameSideClosedRight
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$004E0000+$00800000 ; initial drawing location

	; left wall
	dc.l	PatternFrameSideClosedLeft
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_B+$00000000+$00800000 ; initial drawing location

	; store front
	dc.l	PatternStoreFront
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00000000+$0C000000 ; initial drawing location

	; sign
	dc.l	PatternCavernSign
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000000110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$001A0000+$0C000000 ; initial drawing location

	; pattern 0 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$0A000000 ; initial drawing location

	; pattern 0 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$0A000000 ; initial drawing location

	; pattern 0 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$02000000 ; initial drawing location

	; pattern 0 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00480000+$02000000 ; initial drawing location

	; pattern 0 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$000E0000+$02000000 ; initial drawing location

	; pattern 0 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001010001 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$02000000 ; initial drawing location

	; pattern 1 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$06000000 ; initial drawing location

	; pattern 1 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$06000000 ; initial drawing location

	; pattern 1 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$02000000 ; initial drawing location

	; pattern 1 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$02000000 ; initial drawing location

	; pattern 1 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$000E0000+$06000000 ; initial drawing location

	; pattern 1 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001011010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$06000000 ; initial drawing location

	; pattern 2 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$02000000 ; initial drawing location

	; pattern 2 - palette 0 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$02000000 ; initial drawing location

	; pattern 2 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00220000+$06000000 ; initial drawing location

	; pattern 2 - palette 1 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00280000+$06000000 ; initial drawing location

	; pattern 2 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$0A000000 ; initial drawing location

	; pattern 2 - palette 2 - base
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001100011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00480000+$0A000000 ; initial drawing location

	; pattern 0 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$08800000 ; initial drawing location

	; pattern 0 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001110010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$09800000 ; initial drawing location

	; pattern 0 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$08800000 ; initial drawing location

	; pattern 0 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001110010 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$09800000 ; initial drawing location

	; pattern 0 - palette 1 - low
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$00800000 ; initial drawing location

	; pattern 0 - palette 1 - low
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00480000+$00800000 ; initial drawing location

	; pattern 0 - palette 2 - low
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$000E0000+$00800000 ; initial drawing location

	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001101100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$00800000 ; initial drawing location

	; pattern 1 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$04800000 ; initial drawing location

	; pattern 1 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001111011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$05800000 ; initial drawing location

	; pattern 1 - palette 0 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1000000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$04800000 ; initial drawing location

	; pattern 1 - palette 0 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001111011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$05800000 ; initial drawing location

	; pattern 1 - palette 1 - low
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00020000+$00800000 ; initial drawing location

	; pattern 1 - palette 1 - low
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00080000+$00800000 ; initial drawing location

	; pattern 1 - palette 2 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$000E0000+$04800000 ; initial drawing location

	; pattern 1 - palette 2 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001111011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$000E0000+$05800000 ; initial drawing location

	; pattern 1 - palette 2 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000001110101 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$04800000 ; initial drawing location

	; pattern 1 - palette 2 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000001111011 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00140000+$05800000 ; initial drawing location

	; pattern 2 - palette 0 - low
	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00360000+$00800000 ; initial drawing location

	dc.l	Pattern24x24
	;		%pccvhnnnnnnnnnnn
	dc.w	%0000000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$003C0000+$00800000 ; initial drawing location

	; pattern 2 - palette 1 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00220000+$04800000 ; initial drawing location

	; pattern 2 - palette 1 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010000100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00220000+$05800000 ; initial drawing location

	; pattern 2 - palette 1 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1010000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00280000+$04800000 ; initial drawing location

	; pattern 2 - palette 1 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0010000010000100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00280000+$05800000 ; initial drawing location

	; pattern 2 - palette 2 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$08800000 ; initial drawing location

	; pattern 2 - palette 2 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010000100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00420000+$09800000 ; initial drawing location

	; pattern 2 - palette 2 - high
	dc.l	Pattern24x16
	;		%pccvhnnnnnnnnnnn
	dc.w	%1100000001111110 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00480000+$08800000 ; initial drawing location

	; pattern 2 - palette 2 - low
	dc.l	Pattern24x8
	;		%pccvhnnnnnnnnnnn
	dc.w	%0100000010000100 ; vdp pattern
	dc.w	$0000 ; repeat=0
	dc.l	VDP_VRAM_WRITE_A+$00480000+$09800000 ; initial drawing location

	;---------------------------------------------------------------------------
	; text
	;---------------------------------------------------------------------------
	dc.w	$FFFF ; no text

	;---------------------------------------------------------------------------
	; objects
	;---------------------------------------------------------------------------
	dc.w	OBJ_LIST_LENGTH-1 ; object count

	;---------------------------------------------------------------------------
	; word0=Object ID (0-65535)
	; word1[0-8]=x0 (0-511)
	; word1[9-15]=width (0-127)
	; word2[0-8]=y0 (0-512)
	; word2[9-15]=height (0-127)
	;---------------------------------------------------------------------------

	dc.w	OBJ_SCENE_CAVERN_ARCADE0
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000010000111
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000100001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE1
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000110001000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000100001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE2
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000010110111
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000011001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE3
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000100000111
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000011001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE4
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000101010111
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000011001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE5
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000010001000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000010001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE6
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000010110111
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000010001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE7
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000101010111
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000010001000

	dc.w	OBJ_SCENE_CAVERN_ARCADE8
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0110000110001000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0101000010001000

	dc.w	OBJ_NOTHING
	;		%wwwwwwwxxxxxxxxx
	dc.w	%0000000000000000
	;		%hhhhhhhyyyyyyyyy
	dc.w	%0000000000000000

	;---------------------------------------------------------------------------
	; collision data
	;---------------------------------------------------------------------------
	dc.l	CavernCollisionStart ; location of collision data

	;---------------------------------------------------------------------------
	; exits: 0=south,1=north,2=west,3=east
	;---------------------------------------------------------------------------
	dc.w	SCENE_ID_EEHALL
	dc.w	SCENE_ID_CAVERN_BACKROOM
	dc.w	$FFFF
	dc.w	$FFFF

	;---------------------------------------------------------------------------
	; npc locations
	;---------------------------------------------------------------------------
	dc.w	$0003 ; npc count - 1

	dc.w	$00CC ; starting x location of npc0
	dc.w	$00F0 ; starting y location of npc0
	dc.w	DIRECTION_DOWN ; starting direction of npc0
	dc.w	$FFFF ; movement frequency of npc0
	dc.l	NullMovementStart ; location of movement pattern for npc0
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc1
	dc.w	$0000 ; starting y location of npc1
	dc.w	DIRECTION_DOWN ; starting direction of npc1
	dc.w	$FFFF ; movement frequency of npc1
	dc.l	NullMovementStart ; location of movement pattern for npc1
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc2
	dc.w	$0000 ; starting y location of npc2
	dc.w	DIRECTION_DOWN ; starting direction of npc2
	dc.w	$FFFF ; movement frequency of npc2
	dc.l	NullMovementStart ; location of movement pattern for npc2
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	dc.w	$0000 ; starting x location of npc3
	dc.w	$0000 ; starting y location of npc3
	dc.w	DIRECTION_DOWN ; starting direction of npc3
	dc.w	$FFFF ; movement frequency of npc3
	dc.l	NullMovementStart ; location of movement pattern for npc3
	dc.w	(NullMovementEnd-NullMovementStart-1) ; movement pattern length

	;---------------------------------------------------------------------------
	; bgm
	;---------------------------------------------------------------------------
	dc.l	BGM_Mall ; location of background music
